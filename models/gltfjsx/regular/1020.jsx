/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 models/glb/regular/1020.glb -o models/gltfjsx/regular/1020.jsx 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export default function Model(props) {
  const { scene } = useGLTF('/1020.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <primitive object={nodes.pm1126_00_00} />
        <primitive object={nodes.origin} />
        <primitive object={nodes.lod_group} />
        <skinnedMesh geometry={nodes.pm1126_00_00_body_mesh_shape.geometry} material={materials.body_a_00} skeleton={nodes.pm1126_00_00_body_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_face_a_mesh_shape.geometry} material={materials.body_b_01} skeleton={nodes.pm1126_00_00_face_a_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_face_b_mesh_shape.geometry} material={materials.body_b_01} skeleton={nodes.pm1126_00_00_face_b_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_feeler_a_mesh_shape.geometry} material={materials.body_b_01} skeleton={nodes.pm1126_00_00_feeler_a_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_feeler_b_mesh_shape.geometry} material={materials.body_b_01} skeleton={nodes.pm1126_00_00_feeler_b_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_feeler_c_mesh_shape.geometry} material={materials.body_b_00} skeleton={nodes.pm1126_00_00_feeler_c_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_head_mesh_shape.geometry} material={materials.body_b_00} skeleton={nodes.pm1126_00_00_head_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_tail_mesh_shape.geometry} material={materials.body_b_02} skeleton={nodes.pm1126_00_00_tail_mesh_shape.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_eye_a_mesh_shape_mesh.geometry} material={materials.l_eye_a} skeleton={nodes.pm1126_00_00_eye_a_mesh_shape_mesh.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_eye_a_mesh_shape_mesh_1.geometry} material={materials.r_eye_a} skeleton={nodes.pm1126_00_00_eye_a_mesh_shape_mesh_1.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_eye_b_mesh_shape_mesh.geometry} material={materials.l_eye_b} skeleton={nodes.pm1126_00_00_eye_b_mesh_shape_mesh.skeleton} />
        <skinnedMesh geometry={nodes.pm1126_00_00_eye_b_mesh_shape_mesh_1.geometry} material={materials.r_eye_b} skeleton={nodes.pm1126_00_00_eye_b_mesh_shape_mesh_1.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/1020.glb')
