/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 models/glb/regular/479.glb -o models/gltfjsx/regular/479.jsx 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export default function Model(props) {
  const { scene } = useGLTF('/479.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group scale={2.54}>
        <primitive object={nodes.Waist} />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={2.54}>
        <skinnedMesh geometry={nodes.Rotom_1.geometry} material={materials['Material #10']} skeleton={nodes.Rotom_1.skeleton} />
        <skinnedMesh geometry={nodes.Rotom_2.geometry} material={materials['Material #11']} skeleton={nodes.Rotom_2.skeleton} />
      </group>
      <skinnedMesh geometry={nodes.Rotom_Arms.geometry} material={materials['Material #10']} skeleton={nodes.Rotom_Arms.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={2.54} />
      <skinnedMesh geometry={nodes.Rotom_Bottom.geometry} material={materials['Material #10']} skeleton={nodes.Rotom_Bottom.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={2.54} />
      <skinnedMesh geometry={nodes.Rotom_Tail.geometry} material={materials['Material #10']} skeleton={nodes.Rotom_Tail.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={2.54} />
    </group>
  )
}

useGLTF.preload('/479.glb')
